help.start()
title()
q(0)
install.packages("KernSmooth")
library(kernsmooth)
library(kernsmooth)
install.packages("kernsmooth")
intall.packages("KernSmooth")
install.packages("KernSmooth")
library(KernSmooth)
1+1
sqrt(16)
log100
log10(100)
q()
getwd
getwd()
dir()
x <- list(2, "a", "b", TRUE)
x[[1]]
x <- 1:4
y <- 2
X+Y
x+y
q()
mydata <- rbinom(100)
sd(na.rm = FALSE, x = mydata)
mydata <- rnorm(100)
sd(na.rm = FALSE, x = mydata)
mydata <- rnorm(100)
sd(na.rm = FALSE, mydata)
f <- function (tens,ones){
ones + 10*tens
}
f <- function (tens,ones){
ones + 10*tens
}
f(2,3)
serach()
search()
f <- (tens,ones){
ones + one*tens
}
f <- function(tens,ones){
ones + one*tens
}
f(2,3)
make.power <- function(n){
pow <- function(x)
x^n
}
cube <- make.power(3)
make.power <- function(n){
pow <- function(x) {
x^n
}
pow
}
cube <- make.power(3)
make.power <- function(n){
pow <- function(x) {
x^n
}
pow
}
cube <- make.power(3)
cube (3)
make.power <- function(n){
pow <- function(x) {
x^n
}
pow
}
cube <- make.power(3)
ls(environment(cube))
make.power <- function(n){
pow <- function(x) {
x^n
}
pow
}
cube <- make.power(3)
ls(environment(cube))
get("n",enovironment(cube))
make.power <- function(n){
pow <- function(x) {
x^n
}
pow
}
cube <- make.power(3)
ls(environment(cube))
get("n",environment(cube))
y <- 10
f <- function (x) {
y <-2
y^2 + g(x)
}
g <- function (x){
x*y
}
f(3)
printmessage <- function(x){
if(x >0)
print("x is greater than zero")
else
pring("x is less than zero")
invisible(x)
}
printmessage(1)
printmessage(NA)
printmessage <- function(x){
if(x >0)
print("x is greater than zero")
else
pring("x is less than zero")
}
printmessage(1)
printmessage <- function(x){
if(x >0)
print("x is greater than zero")
else
pring("x is less than zero")
invisible(x)
}
printmessage(NA)
traceback()
setwd("C:/Users/ZPhay/Desktop/Coursera/Clean & Tidy Data")
